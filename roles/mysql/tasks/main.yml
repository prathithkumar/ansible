- name: Configuring the {{COMPONENT}} repo
  ansible.builtin.copy:
    src: "{{COMPONENT}}.repo"
    dest: /etc/yum.repos.d/{{COMPONENT}}.repo


- name: installing {{COMPONENT}}
  ansible.builtin.package:
      name: 
         - mysql-community-server
         - MySQL-python
         - python3-PyMySQL
      state: present


- name: Starting {{COMPONENT}}
  systemd:
    name: mysqld
    state: restarted 
    enabled: yes



# If any of the task in the block fails, then Rescue tasks will be executed.
- name: Verifying the password
  block:
    - name: Fetch MySQL Version
      community.mysql.mysql_info:
          login_user: root
          login_password: RoboShop@1
          filter: version
  rescue:
     - name: fetches the log file from the remote node
       ansible.builtin.slurp:
        src: /var/log/mysqld.log
       register: pwd_log

     - name: Extracting the root password
       ansible.builtin.set_fact:
        DEFAULT_PASSWORD: "{{ pwd_log['content'] | b64decode | regex_findall('.*temporary password.*') | join(' ') | split(' ') | last }}"

     - name: Resetting Default root Password of {{COMPONENT}}
       ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ROOT_PASSWORD}}';" | mysql --connect-expired-password -uroot -p{{DEFAULT_PASSWORD}} 
  
     - name: Removing {{COMPONENT}} password validate plugin
       ansible.builtin.shell: echo "Uninstall plugin Validate_password;" | mysql -uroot -pRoboShop@1  
       ignore_errors: yes
  

- name: Download and extracting {{COMPONENT}}
  ansible.builtin.unarchive:
    src: https://github.com/stans-robot-project/{{COMPONENT}}/archive/main.zip
    dest: /tmp 
    remote_src: yes  



- name: Configuring Name
  ansible.builtin.include_role:
    name: common
    tasks_from: set_name